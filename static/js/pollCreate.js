// Generated by CoffeeScript 1.6.2
(function() {
  define('pollCreate', ['jquery', 'underscore'], function($, _) {
    /*
      JQUERY SETUP
    */

    var getFormData;

    $('#add-button').click(function(event) {
      var index, last_choice, new_index;

      last_choice = $('fieldset .choice').last();
      index = last_choice.attr('index');
      new_index = (parseInt(index)) + 1;
      last_choice.after('<br><input name=\'choice[' + new_index + ']\' class=\'choice\' index=\'' + new_index + '\'>');
      console.log(last_choice);
      return null;
    });
    $('form').submit(function(event) {
      var ajax_settings, form_obj, promise;

      form_obj = getFormData($(this).find('fieldset'));
      console.log(form_obj);
      ajax_settings = {
        type: 'PUT',
        url: '',
        contentType: 'application/json',
        data: JSON.stringify(form_obj)
      };
      promise = $.ajax(ajax_settings);
      promise.done(function(data) {
        return $('#content').html('<p>Form Created</p>');
      });
      promise.fail(function(jqXHR, textStatus, errorThrown) {
        throw new Error(errorThrown);
      });
      return false;
    });
    /*
      HELPER FUNCTIONS
    */

    getFormData = function(form_selector) {
      /*
        Serialize the input from an HTML form into a javascript object. Inputs
        with the class 'choice' are packaged together as a list and assigned
        to the 'choices' property of the result object. All other properties
        derive their keys and values directly from the form elements' name and
        value.
      
        @param {String} form_selector The jQuery selector string for the form
                                      fieldset to be serialized.
        @return {Object} result_obj A serialized object representation of the
                                    form data
      */

      var choices, choices_obj, elements, elements_of_interest, inputs, other_inputs, other_pair_list, other_pair_obj, part_list, part_obj, part_string, participants, result_obj,
        _this = this;

      elements_of_interest = ['input', 'select', 'textarea'];
      elements = $(form_selector).children();
      inputs = _.filter(elements, function(element) {
        return _.contains(elements_of_interest, $(element).prop('localName'));
      });
      console.log('inputs:', inputs);
      choices = _.filter(inputs, function(input) {
        return ($(input).prop('className')) === 'choice';
      });
      participants = _.filter(inputs, function(input) {
        return ($(input).prop('localName')) === 'textarea';
      });
      other_inputs = _.difference(inputs, choices, participants);
      other_pair_list = _.map(other_inputs, function(elem) {
        var $elem;

        $elem = $(elem);
        return [$elem.attr('name'), $elem.val()];
      });
      other_pair_obj = _.object(other_pair_list);
      choices_obj = {
        choices: _.map(choices, function(elem) {
          return $(elem).val();
        })
      };
      part_string = $(participants[0]).val();
      part_list = part_string.split(/[\s\n,]+/);
      part_obj = {
        participants: part_list
      };
      return result_obj = _.extend(choices_obj, part_obj, other_pair_obj);
    };
    return null;
  });

}).call(this);
